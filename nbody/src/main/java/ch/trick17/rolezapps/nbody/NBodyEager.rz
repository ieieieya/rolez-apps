package ch.trick17.rolezapps.nbody

import rolez.util.Random

class NBodyRolezEager extends NBodyRolez {
	
	new(bodies: int, iterations: int, tasks: int) {
        super(bodies, iterations, tasks);
    }
	
	override readwrite simulationStep: {
        val positions  = new Array[readwrite Body\position](this.bodies);
        val velocities = new Array[readwrite Body\velocity](this.bodies);
        for(var i = 0; i < this.bodies; i++) {
            positions .set(i, this.system.get(i) slice position);
            velocities.set(i, this.system.get(i) slice velocity);
        }
        
        val vSlices = velocities.partition(the ContiguousPartitioner, this.tasks);
        parfor(var t = 0; t < this.tasks; t++)
            this.updateVelocity(vSlices.get(t), positions);
        
        val bodiesSlices = this.system.partition(the ContiguousPartitioner, this.tasks);
        parfor(var t = 0; t < this.tasks; t++)
            this.updatePosition(bodiesSlices.get(t));
    }
	
}