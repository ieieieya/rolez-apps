package ch.trick17.rolezapps.histogram

class HistogramImmutable extends Histogram {
    
    val image: pure Vector[pure Vector[int]]
    
    new(image: readwrite Array[readwrite Array[int]]) {
        super(image);
        
        val immutable = new VectorBuilder[pure Vector[int]](image.length);
        for(var y = 0; y < image.length; y++) {
            val row = image.get(y);
            val immutableRow = new VectorBuilder[int](row.length);
            for(var x = 0; x < row.length; x++)
                immutableRow.set(x, row.get(x));
            immutable.set(y, immutableRow.build);
        }
        
        this.image = immutable.build;
    }
    
    override pure computePart(range: pure SliceRange): readwrite HistPart {
        val r: readwrite Array[int] = new Array[int](256);
        val g: readwrite Array[int] = new Array[int](256);
        val b: readwrite Array[int] = new Array[int](256);
        
        for(var y = range.begin; y < range.end; y+= range.step) {
            val row = this.image.get(y);
            for(var x = 0; x < row.length; x++) {
                val color = new Color(row.get(x));
                r.set(color.r, r.get(color.r) + 1);
                g.set(color.g, g.get(color.g) + 1);
                b.set(color.b, b.get(color.b) + 1);
            }
        }
        return new HistPart(r, g, b);
    }
}